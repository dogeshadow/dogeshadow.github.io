<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>P5705 数字反转</title>
      <link href="2021/02/07/P5705-%E6%95%B0%E5%AD%97%E5%8F%8D%E8%BD%AC/"/>
      <url>2021/02/07/P5705-%E6%95%B0%E5%AD%97%E5%8F%8D%E8%BD%AC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>输入一个不小于 100 且小于 1000，同时包括小数点后一位的一个浮点数<br>要求把这个数字翻转过来并输出</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>一行一个浮点数</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>一行一个浮点数</p><h3 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><p><strong>输入 #1</strong></p><pre class="language-none"><code class="language-none">123.4</code></pre><p><strong>输出 #1</strong></p><pre class="language-none"><code class="language-none">4.321</code></pre><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><h4 id="法一"><a href="#法一" class="headerlink" title="法一"></a>法一</h4><p>因为题目限定了格式，所以直接按照格式 <code>scanf</code> 每一位数再反过来输出</p><pre class="language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span> </span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">char</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%c%c%c.%c"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>a<span class="token punctuation">,</span> <span class="token operator">&amp;</span>b<span class="token punctuation">,</span> <span class="token operator">&amp;</span>c<span class="token punctuation">,</span> <span class="token operator">&amp;</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%c.%c%c%c"</span><span class="token punctuation">,</span> d<span class="token punctuation">,</span> c<span class="token punctuation">,</span> b<span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><h4 id="法二"><a href="#法二" class="headerlink" title="法二"></a>法二</h4><p>把数当作<strong>字符串</strong>处理，从后往前输出每一个元素，包括小数点<br>计算字符串有效长度 (不包括 ‘\0’) 的方法：使用 <code>&lt;string.h&gt;</code> 头文件里的 <code>strlen</code> 函数<br><strong>注意：</strong>翁恺老师讲的 <code>sizeof(a) / sizeof(a[0])</code> 检测的是数组 a 的长度<br>本题这种初始化方式 (先声明再 scanf) 采用这种方法得出的长度是声明的数组长度 10，根本无法计算字符串有效长度<br>即使采用可以计算的初始化方式 (e.g., <code>char a[] = &quot;Hello&quot;</code>)，这种方法得出的也是包括 ‘\0’ 的字符串长度 (6)</p><pre class="language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">char</span> num<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> len<span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>    len <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>len <span class="token operator">=</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> len <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">;</span> len<span class="token operator">--</span><span class="token punctuation">)</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%c"</span><span class="token punctuation">,</span>num<span class="token punctuation">[</span>len<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><h4 id="法三"><a href="#法三" class="headerlink" title="法三"></a>法三</h4><p>把数当作<strong>数</strong>处理，得到每一位数，再按照题目规定顺序输出</p><pre class="language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span> </span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">float</span> num<span class="token punctuation">;</span><span class="token keyword">int</span> d<span class="token punctuation">,</span> intnum<span class="token punctuation">,</span> out<span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%f"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>d <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>num <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d."</span><span class="token punctuation">,</span> d<span class="token punctuation">)</span><span class="token punctuation">;</span>intnum <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>num<span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span>intnum<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>out <span class="token operator">=</span> intnum <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> out<span class="token punctuation">)</span><span class="token punctuation">;</span>intnum <span class="token operator">/=</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 编程题 </category>
          
          <category> Luogu in C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三色球问题</title>
      <link href="2021/01/23/%E4%B8%89%E8%89%B2%E7%90%83%E9%97%AE%E9%A2%98/"/>
      <url>2021/01/23/%E4%B8%89%E8%89%B2%E7%90%83%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>有红、黄、蓝三种颜色的球，其中红球 3 个，黄球 3 个，绿球 6 个</p><p>先将这 12 个球混合放在一个盒子中，从中任意摸出 8 个球，编程计算摸出球的各种颜色搭配</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>该题无输入</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>设共有 n 种颜色搭配，则输出 n 行，每行输出一种颜色搭配</p><p>每一行依次输出红球个数，黄球个数，绿球个数，并用逗号 + 空格隔开</p><h3 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><p>该题无样例</p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>设摸出的红球个数为 red，黄球个数为 yellow，绿球个数为 green</p><p>根据题目条件“摸出八个球”，构建等式 <code>red + yellow + green == 8</code></p><p>然后根据题目条件限定球的个数 (green &gt;= 2)</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> red <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 可以取0-3</span>    <span class="token keyword">for</span> yellow <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 可以取0-3</span>        <span class="token keyword">for</span> green <span class="token keyword">in</span> <span class="token builtin">range</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 注意从2开始</span>            <span class="token keyword">if</span> red <span class="token operator">+</span> yellow <span class="token operator">+</span> green <span class="token operator">==</span> <span class="token number">8</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>red<span class="token punctuation">,</span> yellow<span class="token punctuation">,</span> green<span class="token punctuation">)</span></code></pre><p>另外一种解法，思路差不多，代码实现不太一样</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> red <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> yellow <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        green <span class="token operator">=</span> <span class="token number">8</span> <span class="token operator">-</span> red <span class="token operator">-</span> yellow        <span class="token keyword">if</span> green <span class="token operator">&lt;=</span> <span class="token number">6</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>red<span class="token punctuation">,</span> yellow<span class="token punctuation">,</span> green<span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 编程题 </category>
          
          <category> python 练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
